// This is your Prisma schema file,
// learn more: https://pris.ly/d/prisma-schema

// generator client {
//   provider = "prisma-client-js"
//   previewFeatures = ["mongoDb"]
// }

// datasource db {
//   provider = "mongodb"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider = "mongodb"
  url = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

model Post {
  id String @id @default(dbgenerated()) @map("_id") @db.ObjectId
  slug String @unique
  title String
  body String
  comments Comment[]
  user User @relation(fields: [userID], references: [id])
  userID String @db.ObjectId
}

//Comments contain comment string and connect back to post
// postID has to have @db.ObjectID to == Post's id type

// Models represent the entities of your application domain. They are defined using model blocks in the data model.

// @param map Defines a custom primary key name in the database.

// @param length Defines a maximum length for the subpart of the value to be indexed in cases where the full value would exceed MySQL's limits for index sizes. 

model Comment {
  id String @id @default(dbgenerated()) @map("_id") @db.ObjectId
  post Post @relation(fields: [postId], references: [id])
  postId String @db.ObjectId
  comment String
}
// The SQL definition of the default value which is generated by the database. This is not validated by Prisma.
// @map Maps a field name from the Prisma schema to a different column name. @param name The name of the target database column.

model User {
  id String @id @default(dbgenerated()) @map("_id") @db.ObjectId
  email String
  name String?
  posts Post[]
}